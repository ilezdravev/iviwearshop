{"version":3,"sources":["webpack:///./src/js/components/ui/BTBSlider.js"],"names":["Flickity","require","Slider","el","this","_init","bindEvents","defaults","autoPlay","contain","customUI","draggable","cellSelector","cellAlign","prevNextButtons","pageDots","groupCells","wrapAround","wheelControl","adaptiveHeight","arrowShape","x0","x1","y1","x2","y2","x3","options","merge","str2json","dataset","parentControllerEl","getClosest","classList","remove","offsetHeight","sliderEl","navContainerEl","document","querySelector","caption","slidesCaptions","querySelectorAll","innerHTML","initCustomUI","slider","previousButton","addEventListener","previous","nextButton","next","window","resize","jQuery","on","e","wheel","addWheelListener","element","event","preventDefault","wheelNormalized","normalizeWheel","applyForce","pixelY","startAnimation","dragEnd","pointer","cellElement","cellIndex","target","click","index","component","node","ctx"],"mappings":"mMAEMA,G,OAAWC,EAAQ,MAMnBC,E,WACJ,WAAYC,GAAI,YACdC,KAAKC,MAAMF,GACXC,KAAKE,a,iCAGP,SAAMH,GACJC,KAAKD,GAAKA,EAEVC,KAAKG,SAAW,CACdC,UAAU,EACVC,SAAS,EACTC,UAAU,EACVC,WAAW,EACXC,aAAc,gBACdC,UAAW,SACXC,iBAAiB,EACjBC,UAAU,EACVC,YAAY,EACZC,YAAY,EACZC,cAAc,EACdC,gBAAgB,EAChBC,WAAY,CACVC,GAAI,GACJC,GAAI,GAAIC,GAAI,GACZC,GAAI,GAAIC,GAAI,GACZC,GAAI,KAIRtB,KAAKuB,QAAUC,gBAAMxB,KAAKG,SAAUsB,YAAS1B,EAAG2B,QAAQH,UAExDvB,KAAK2B,mBAAqBC,YAAW5B,KAAKD,GAAI,wBAC9CA,EAAG8B,UAAUC,OAAO,aAEpB/B,EAAGgC,aAEH/B,KAAKgC,SAAW,IAAIpC,EAASG,EAAIC,KAAKuB,SAItCvB,KAAKiC,eAAiBC,SAASC,cAAc,yCAC7CnC,KAAKoC,QAAUpC,KAAKiC,eAAeE,cAAc,YACjDnC,KAAKqC,eAAiBrC,KAAKD,GAAGuC,iBAAiB,4BAE/CtC,KAAKoC,QAAQG,UAAYvC,KAAKqC,eAAe,GAAGE,UAEhDvC,KAAKwC,aAAaxC,KAAKgC,Y,0BAGzB,SAAaS,GAAQ,WAGfC,EAAiB1C,KAAKiC,eAAeE,cAAc,qBACnDO,GACFA,EAAeC,iBAAiB,SAAS,WACvC,EAAKX,SAASY,cAMlB,IAAIC,EAAa7C,KAAKiC,eAAeE,cAAc,iBAE/CU,GAEFA,EAAWF,iBAAiB,SAAS,WACnC,EAAKX,SAASc,Y,wBAMpB,WAAa,WACXC,OAAOJ,iBAAiB,QAAQ,WAC9B,EAAKX,SAASgB,YAGZhD,KAAK2B,oBACPsB,OAAOjD,KAAK2B,oBAAoBuB,GAAG,YAAY,SAACC,GAC9C,EAAKnB,SAASgB,YAIdhD,KAAKuB,QAAQT,cACfsC,IAAMC,iBAAiBrD,KAAKgC,SAASsB,SAAS,SAACC,GAC7CA,EAAMC,iBACN,IAAMC,EAAkBC,IAAeH,GACvC,EAAKvB,SAAS2B,YAAYF,EAAgBG,OAAS,GACnD,EAAK5B,SAAS6B,iBACd,EAAK7B,SAAS8B,aAIlB9D,KAAKgC,SAASkB,GAAG,eAAe,SAAUK,EAAOQ,EAASC,EAAaC,GAChED,GAGLT,EAAMW,OAAOC,WAGfnE,KAAKgC,SAASkB,GAAG,UAAU,SAACkB,GAC1B,EAAKhC,QAAQG,UAAY,EAAKF,eAAe+B,GAAO7B,iB,KAK3C8B,uBAAU,SAACC,EAAMC,GAC9B,IAAIzE,EAAOwE,EAAMC","file":"27.chunk.db22c2647285421515cb.js","sourcesContent":["import { component } from 'picoapp';\nimport { merge } from 'lodash';\nconst Flickity = require('flickity');\nimport wheel from 'wheel';\nimport normalizeWheel from 'normalize-wheel';\nimport { str2json, getClosest } from '../../utilities';\nimport $ from 'jquery';\n\nclass Slider {\n  constructor(el) {\n    this._init(el);\n    this.bindEvents();\n  }\n\n  _init(el) {\n    this.el = el;\n\n    this.defaults = {\n      autoPlay: false,\n      contain: true,\n      customUI: false,\n      draggable: true,\n      cellSelector: '.Slider__item',\n      cellAlign: 'center',\n      prevNextButtons: true,\n      pageDots: true,\n      groupCells: false,\n      wrapAround: true,\n      wheelControl: false,\n      adaptiveHeight: true,\n      arrowShape: { \n        x0: 10,\n        x1: 60, y1: 50,\n        x2: 60, y2: 45,\n        x3: 15\n      }\n    };\n\n    this.options = merge(this.defaults, str2json(el.dataset.options));\n\n    this.parentControllerEl = getClosest(this.el, '.js-sliderController');\n    el.classList.remove('is-hidden');\n    // trigger redraw for transition\n    el.offsetHeight;\n\n    this.sliderEl = new Flickity(el, this.options);\n\n    \n\n    this.navContainerEl = document.querySelector(\".Section--behind-the-brand .SliderNav\");\n    this.caption = this.navContainerEl.querySelector('.caption');\n    this.slidesCaptions = this.el.querySelectorAll('.Slider__item figcaption');\n\n    this.caption.innerHTML = this.slidesCaptions[0].innerHTML;\n\n    this.initCustomUI(this.sliderEl);\n  }\n\n  initCustomUI(slider) {\n\n    // previous\n    var previousButton = this.navContainerEl.querySelector('.button--previous');\n    if (previousButton) {\n      previousButton.addEventListener('click', () => {\n        this.sliderEl.previous();\n        \n      });\n    }\n\n    // next\n    var nextButton = this.navContainerEl.querySelector('.button--next');\n    // console.log('CONTAINER: ', containerEl);\n    if (nextButton) {\n      // console.log('NEXT BUTTON: ', nextButton);\n      nextButton.addEventListener('click', () => {\n        this.sliderEl.next();\n        \n      });\n    }\n  }\n\n  bindEvents() {\n    window.addEventListener('load', () => {\n      this.sliderEl.resize();\n    });\n\n    if (this.parentControllerEl) {\n      jQuery(this.parentControllerEl).on('isActive', (e) => {\n        this.sliderEl.resize();\n      });\n    }\n\n    if (this.options.wheelControl) {\n      wheel.addWheelListener(this.sliderEl.element, (event) => {\n        event.preventDefault();\n        const wheelNormalized = normalizeWheel(event);\n        this.sliderEl.applyForce(-wheelNormalized.pixelY / 4);\n        this.sliderEl.startAnimation();\n        this.sliderEl.dragEnd();\n      });\n    }\n\n    this.sliderEl.on('staticClick', function (event, pointer, cellElement, cellIndex) {\n      if (!cellElement) {\n        return;\n      }\n      event.target.click();\n    });\n\n    this.sliderEl.on('change', (index) =>  {\n      this.caption.innerHTML = this.slidesCaptions[index].innerHTML;\n    })\n  }\n}\n\nexport default component((node, ctx) => {\n  new Slider(node, ctx);\n});\n"],"sourceRoot":""}