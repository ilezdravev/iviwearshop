{"version":3,"sources":["webpack:///./src/js/components/product/ProductSelector.js"],"names":["theme","colors","primary25","primary","customStyles","valueContainer","base","state","padding","fontSize","option","color","isDisabled","ProductSelector","props","initialOption","options","params","ctx","getLabel","bind","this","parentNode","ReactDOM","findDOMNode","selector","querySelector","style","display","JSON","parse","dataset","formattedOptions","str2json","replaceAll","map","value","label","disabled","setState","getInitialValue","bindEvents","on","selectedVariant","className","data-value","material","dispatchEvent","Event","emit","optionId","id","$","trigger","selected","selectedIndex","findIndex","element","viewBox","width","height","href","getOptionLabel","getOptionValue","onChange","onVariantSelected","placeholder","tabIndex","menuPlacement","styles","isSearchable","aria-label","components","DropdownIndicator","dropDownIndicator","IndicatorSeparator","Component","component","node","parent","render","unmountComponentAtNode","e","console","error"],"mappings":"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","file":"23.chunk.db2c8e18a2f7f0416893.js","sourcesContent":["import React, { Component } from 'react';\nimport { component } from 'picoapp';\nimport ReactDOM from 'react-dom';\nimport Select from 'react-select';\nimport { ErrorBoundary } from '../../hooks';\n\nimport { str2json } from '../../utilities';\nimport $ from 'jquery';\n\nconst theme = (theme) => ({\n  ...theme,\n  colors: {\n    ...theme.colors,\n    primary25: '#f2f2f2',\n    primary: '#f9f1f0',\n  }\n});\n\nconst customStyles = {\n  valueContainer: (base, state) => {\n    return {\n      ...base,\n      padding: '0.4rem 0.8rem',\n      fontSize: '18px'\n    };\n  },\n  option: (base, state) => {\n    return {\n      ...base,\n      color: state.isDisabled ? \"#ccc\" : \"#514D52\"\n    };\n  }\n};\n\nclass ProductSelector extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialOption: [],\n      options: [],\n      params: {}\n    };\n    this.ctx = props.ctx;\n    this.getLabel = this.getLabel.bind(this);\n    \n  }\n\n  componentDidMount() {\n    this.parentNode = ReactDOM.findDOMNode(this).parentNode;\n    this.selector = this.parentNode.parentNode.querySelector('select');\n    this.selector.style.display = 'none';\n\n    const params = JSON.parse(this.parentNode.dataset.params);\n    \n    // Format the options to be consumed by the select component\n    const options = str2json(this.parentNode.dataset.options.replaceAll('\"', ''));\n    \n    const formattedOptions = options.map((option) => {\n      return { value: option.value, label: option.value, disabled: option.disabled };\n    });\n\n    this.setState(\n      {\n        options: formattedOptions,\n        params: params\n      },\n      () => {\n        this.getInitialValue();\n      }\n    );\n    this.bindEvents();\n  }\n\n  componentWillUnmount() {\n    this.selector.style.display = 'block';\n  }\n\n  bindEvents(){\n    this.ctx.on('variant_changed', state => {\n      this.selector.value = state.option.value;\n      this.setState({ selectedVariant: state.option});\n    })\n  }\n\n  getLabel(option) {\n    return (\n      <div\n        className=\"Product__select__option\"\n        data-value={`${this.state.params.material} ${option.label}`}\n      >\n        <div className=\"image\" />\n        <div className=\"title\">{option.label}</div>\n      </div>\n    );\n  }\n\n  onVariantSelected(option) {\n    if(option){\n      this.setState({ selectedVariant: option}, () => {\n        this.selector.value = option.value;\n        this.selector.dispatchEvent(new Event('change'));\n        this.ctx.emit('variant_changed', {option, optionId: this.selector.id});\n        //Jquery change event trigger for istock notifications \n        $(this.selector).trigger('change');\n      }); \n    }\n  }\n\n  getInitialValue() {\n    if (this.state.params.selected) {\n      let selectedIndex = this.state.options.findIndex(\n        (element) => element.value === this.state.params.selected\n      );\n      this.setState({\n        selectedVariant: this.state.options[selectedIndex],\n      });\n    }\n  }\n  dropDownIndicator() {\n    return (\n      <div>\n        <svg viewBox='0 0 20 20' className='icon' width='1em' height='1em'>\n          <use href='#icon-down'></use>\n        </svg>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <>\n        <Select\n          getOptionLabel={this.getLabel}\n          getOptionValue={(option) => option}\n          onChange={(option) => this.onVariantSelected(option)}\n          value={this.state.selectedVariant}\n          options={this.state.options}\n          \n          placeholder={this.state.params.label}\n          className=\"Product__select\"\n          tabIndex=\"0\"\n          menuPlacement=\"auto\"\n          styles={customStyles}\n          theme={theme}\n          isSearchable={false}\n          aria-label={this.state.params.label}\n          components={{ DropdownIndicator:this.dropDownIndicator, IndicatorSeparator:() => null }}\n        />\n      </>\n    );\n  }\n}\n\nexport default component((node, ctx) => {\n  const element = <ErrorBoundary ctx={ctx} parent={node.querySelector('.component-wrapper')}><ProductSelector ctx={ctx}/></ErrorBoundary>;\n  ReactDOM.render(element, node.querySelector('.component-wrapper'));\n\n  // Unmount component on Pjax navigation\n  return function() {\n    try {\n      ReactDOM.unmountComponentAtNode(node);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n});\n\n"],"sourceRoot":""}