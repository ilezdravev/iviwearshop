{"version":3,"sources":["webpack:///./src/js/components/media/MediaPlayer/externalVideoPlayer.js"],"names":["ConditionalWrapper","condition","wrapper","children","ExternalVideoPlayer","loop","muted","playing","controls","mediaUrl","identifier","ctx","useState","autoPlay","setPlay","setUrl","useEffect","on","ev","target","setPlaying","includes","id","split","scrollableAncestor","window","onEnter","previousPosition","currentPosition","onLeave","className","url","width","height","config","youtube","playerVars","modestbranding","showinfo","vimeo","playerOptions","responsive"],"mappings":"gKAMMA,G,MAAqB,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,SAAvB,OAAuCF,EAAYC,EAAQC,GAAYA,IAsFnFC,UApFa,SAAC,GAAiE,IAAhEC,EAAgE,EAAhEA,KAAMC,EAA0D,EAA1DA,MAAOC,EAAmD,EAAnDA,QAASC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,WAAYC,EAAU,EAAVA,IAAU,EAE5DC,mBAASL,GAFmD,WAErFM,EAFqF,aAGpED,mBAASL,IAH2D,WAG/EO,GAH+E,aAItEF,mBAASH,GAJ6D,WAIhFM,GAJgF,WAsC5F,OAhCAC,qBAAU,WACJN,GACFC,EAAIM,GAAG,eAAe,SAACC,GACjBR,GAAcQ,EAAGC,SAAWT,GAC9BU,YAAYb,QAIjB,CAACG,IAEJM,qBAAU,cAWP,IAEHA,qBAAU,WACR,GAAGP,WAAUY,SAAS,qBAAqB,CACzC,IAAMC,EAAKb,EAASc,MAAM,UAAU,GAAGA,MAAM,KAAK,GAClDR,EAAO,mCAAD,OAAoCO,SAE1CP,EAAON,KAER,IAGD,kBAACT,EAAD,CACEC,UAAWY,EACXX,QAAS,SAACC,GAAD,OACP,kBAAC,IAAD,CACEqB,mBAAoBC,OACpBC,QAAS,YAA2C,EAAxCC,iBAAwC,EAAtBC,gBAC5Bd,GAAQ,IAEVe,QAAS,WACPf,GAAQ,KAGTX,KAIL,yBAAK2B,UAAU,wBACb,kBAAC,IAAD,CACEA,UAAU,eACVC,IAAKtB,EACLF,QAASA,EACTyB,MAAM,OACNC,OAAO,OACPzB,SAAUA,EACVH,KAAMA,EACNC,MAAOA,EACP4B,OAAQ,CACNC,QAAS,CACPC,WAAY,CACVC,eAAgB,EAChBC,SAAU,IAGdC,MAAO,CACLC,cAAe,CACbC,YAAY","file":"10.chunk.e6bd1b2e50718578cf32.js","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\nimport ReactPlayer from 'react-player';\nimport { Waypoint } from 'react-waypoint';\nimport { getClosest } from '../../../utilities';\n// import './MediaPlayer.scss';\n\nconst ConditionalWrapper = ({ condition, wrapper, children }) => (condition ? wrapper(children) : children);\n\nconst ExternalVideoPlayer = ({loop, muted, playing, controls, mediaUrl, identifier, ctx }) => {\n\n  const [autoPlay, setAutoPlay] = useState(playing);\n  const [play, setPlay] = useState(playing);\n  const [url, setUrl] = useState(mediaUrl);\n\n  useEffect(() => {\n    if (identifier) {\n      ctx.on('toggleVideo', (ev) => {\n        if (identifier && ev.target === identifier) {\n          setPlaying(!playing);\n        }\n      });\n    }\n  }, [identifier]);\n\n  useEffect(() => { \n    // Control video playback based on parent modal state\n    let parentController = null;//getClosest(parentNode, '.js-videoController');\n    if (parentController) {\n      parentController.addEventListener('isActive', () => {\n        setPlay(true);\n      });\n      parentController.addEventListener('isInactive', () => {\n        setPlay(false);\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    if(mediaUrl?.includes('youtube.com/embed')){\n      const id = mediaUrl.split('embed/')[1].split('?')[0]\n      setUrl(`https://www.youtube.com/watch?v=${id}`);\n    } else {\n      setUrl(mediaUrl);\n    }\n  }, [])\n\n  return (\n    <ConditionalWrapper\n      condition={autoPlay}\n      wrapper={(children) => (\n        <Waypoint\n          scrollableAncestor={window}\n          onEnter={({ previousPosition, currentPosition }) => {\n            setPlay(true);\n          }}\n          onLeave={() => {\n            setPlay(false);\n          }}\n        >\n          {children}\n        </Waypoint>\n      )}\n    >\n      <div className=\"media-player-wrapper\">\n        <ReactPlayer\n          className=\"media-player\"\n          url={mediaUrl}\n          playing={playing}\n          width=\"100%\"\n          height=\"100%\"\n          controls={controls}\n          loop={loop}\n          muted={muted}\n          config={{\n            youtube: {\n              playerVars: {\n                modestbranding: 1,\n                showinfo: 0,\n              },\n            },\n            vimeo: {\n              playerOptions: {\n                responsive: true,\n              },\n            },\n          }}\n        />\n      </div>\n    </ConditionalWrapper>\n  );\n};\n\nexport default ExternalVideoPlayer;"],"sourceRoot":""}