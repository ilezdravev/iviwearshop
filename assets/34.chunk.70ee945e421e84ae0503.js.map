{"version":3,"sources":["webpack:///./src/js/components/ui/StickyElement.js"],"names":["StickyElement","node","hasBreak","dataset","break","top","getBoundingClientRect","placeholder","document","createElement","calcHeight","style","getComputedStyle","offsetHeight","parseInt","marginTop","marginBottom","height","display","opacity","parentNode","insertBefore","width","offsetWidth","window","addEventListener","pageYOffset","classList","add","remove","offsetTop","value","component","ctx"],"mappings":"0FAAA,kBAEA,SAASA,EAAcC,GAErB,IAAMC,EAAWD,EAAKE,QAAQC,MAC1BC,EAAMJ,EAAKK,wBAAwBD,IAEjCE,EAAcC,SAASC,cAAc,OAErCC,EAAa,WACjB,IAAMC,EAAQC,iBAAiBX,GAG/B,OAFaA,EAAKY,aAAeC,SAASH,EAAMI,WAAaD,SAASH,EAAMK,cAAgB,MAK9FT,EAAYI,MAAMM,OAASP,IAC3BH,EAAYI,MAAMO,QAAU,OAC5BX,EAAYI,MAAMQ,QAAU,EAC5BlB,EAAKmB,WAAWC,aAAad,EAAaN,GAE1CA,EAAKU,MAAMW,MAAQrB,EAAKmB,WAAWG,YAAc,KAEjDC,OAAOC,iBAAiB,UAAU,WAChCpB,EAAMJ,EAAKK,wBAAwBD,IACnCJ,EAAKU,MAAMW,MAAQ,QACnBrB,EAAKU,MAAMW,MAAQrB,EAAKmB,WAAWG,YAAc,KACjDhB,EAAYI,MAAMM,OAASP,OAG7Bc,OAAOC,iBAAiB,QAAQ,WAC9BpB,EAAMJ,EAAKK,wBAAwBD,IACnCJ,EAAKU,MAAMW,MAAQ,QACnBrB,EAAKU,MAAMW,MAAQrB,EAAKmB,WAAWG,YAAc,KACjDhB,EAAYI,MAAMM,OAASP,OAG7Bc,OAAOC,iBAAiB,UAAS,WAS/B,GARID,OAAOE,YAAcrB,GACvBJ,EAAK0B,UAAUC,IAAI,UACnBrB,EAAYI,MAAMO,QAAU,UAG5BjB,EAAK0B,UAAUE,OAAO,UACtBtB,EAAYI,MAAMO,QAAU,QAE3BhB,EAED,GAAIsB,OAAOE,YAAczB,EAAKY,aAAeZ,EAAKmB,WAAWP,aAAeZ,EAAKmB,WAAWU,UAAW,CACrG,IAAMC,EAAQ9B,EAAKmB,WAAWP,aAAeZ,EAAKmB,WAAWU,UAAYN,OAAOE,YAAczB,EAAKY,aACnGZ,EAAKU,MAAMN,IAAM0B,EAAQ,UAEzB9B,EAAKU,MAAMN,IAAM,KAQV2B,uBAAU,SAAC/B,EAAMgC,GAC9B,IAAIjC,EAAcC,EAAMgC","file":"34.chunk.70ee945e421e84ae0503.js","sourcesContent":["import { component } from 'picoapp';\n\nfunction StickyElement(node) {\n\n  const hasBreak = node.dataset.break;\n  let top = node.getBoundingClientRect().top;\n\n  const placeholder = document.createElement('div');\n\n  const calcHeight = () => {\n    const style = getComputedStyle(node);\n    let height = node.offsetHeight + parseInt(style.marginTop) + parseInt(style.marginBottom) + 'px';\n    \n    return height;\n  }\n\n  placeholder.style.height = calcHeight();\n  placeholder.style.display = 'none';\n  placeholder.style.opacity = 0\n  node.parentNode.insertBefore(placeholder, node);\n\n  node.style.width = node.parentNode.offsetWidth + 'px';\n\n  window.addEventListener('resize', () => {\n    top = node.getBoundingClientRect().top;\n    node.style.width = 'unset';\n    node.style.width = node.parentNode.offsetWidth + 'px';\n    placeholder.style.height = calcHeight();\n  })\n\n  window.addEventListener('load', () => {\n    top = node.getBoundingClientRect().top;\n    node.style.width = 'unset';\n    node.style.width = node.parentNode.offsetWidth + 'px';\n    placeholder.style.height = calcHeight();\n  })\n\n  window.addEventListener('scroll',() => {\n    if (window.pageYOffset > top) {\n      node.classList.add(\"sticky\");\n      placeholder.style.display = 'block'; \n      \n    } else {\n      node.classList.remove(\"sticky\");\n      placeholder.style.display = 'none'; \n    }\n    if(hasBreak){\n      \n      if (window.pageYOffset + node.offsetHeight > node.parentNode.offsetHeight + node.parentNode.offsetTop) {\n        const value = node.parentNode.offsetHeight + node.parentNode.offsetTop - window.pageYOffset - node.offsetHeight;\n        node.style.top = value + 'px';\n      } else {\n        node.style.top = 0;\n      }\n      \n    }\n  });\n  \n}\n\nexport default component((node, ctx) => {\n  new StickyElement(node, ctx);\n});\n"],"sourceRoot":""}