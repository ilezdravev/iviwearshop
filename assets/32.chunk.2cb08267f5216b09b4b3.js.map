{"version":3,"sources":["webpack:///./node_modules/gsap/all.js","webpack:///./src/js/components/ui/Search.js"],"names":["gsapWithCSS","registerPlugin","core","Tween","Search","el","ctx","this","isActive","identifier","dataset","init","initAnimations","bindEvents","wrapper","searchForm","querySelector","tl","gsap","timeline","paused","onComplete","focus","onReverseComplete","set","clearProps","display","immediateRender","from","height","opacity","stagger","duration","ease","on","state","reverse","play","document","addEventListener","e","key","component","node"],"mappings":"2FAAA,qDAEIA,EAAc,IAAKC,eAAe,MAAc,IACjCD,EAAYE,KAAKC,O,6FCA9BC,E,WACJ,WAAYC,EAAIC,GAAK,YACnBC,KAAKC,UAAW,EAChBD,KAAKD,IAAMA,EACXC,KAAKE,WAAaJ,EAAGK,QAAQD,WAC7BF,KAAKC,UAAW,EAChBD,KAAKI,KAAKN,GACVE,KAAKK,iBACLL,KAAKM,a,gCAGP,SAAKR,GACHE,KAAKO,QAAUT,EACfE,KAAKQ,WAAaV,EAAGW,cAAc,U,4BAGrC,WAAiB,WACXC,EAAKC,IAAKC,SAAS,CACrBC,QAAQ,EACRC,WAAY,WAAM,MAChB,EAAKb,UAAW,EAChB,YAAKO,WAAWC,cAAc,gBAA9B,SAAwCM,SAE1CC,kBAAmB,WACjB,EAAKf,UAAW,EAChBU,IAAKM,IAAI,EAAKnB,GAAI,CAAEoB,WAAY,WAGpCR,EAAGO,IAAIjB,KAAKO,QAAS,CAACY,QAAS,QAASC,iBAAiB,IACzDV,EAAGW,KAAKrB,KAAKO,QAAS,CAAEe,OAAO,EAAGC,QAAS,EAAGC,QAAS,IAAMC,SAAU,GAAKC,KAAM,eAClFhB,EAAGW,KAAKrB,KAAKQ,WAAY,CAAEe,QAAS,IACpCvB,KAAKU,GAAKA,I,wBAGZ,WAAa,WACXV,KAAKD,IAAI4B,GAAG,UAAU,SAACC,GAChBA,EAAM1B,YAAc,EAAKA,aACxB,EAAKD,SACP,EAAKS,GAAGmB,UAER,EAAKnB,GAAGoB,WAMdC,SAASC,iBAAiB,SAAS,SAACC,GACrB,UAATA,EAAEC,KACJ,EAAKxB,GAAGmB,iB,KAODM,uBAAU,SAACC,EAAMrC,GAC9B,IAAIF,EAAOuC,EAAMrC","file":"32.chunk.2cb08267f5216b09b4b3.js","sourcesContent":["import gsap from \"./gsap-core.js\";\nimport CSSPlugin from \"./CSSPlugin.js\";\nvar gsapWithCSS = gsap.registerPlugin(CSSPlugin) || gsap, // to protect from tree shaking\n\tTweenMaxWithCSS = gsapWithCSS.core.Tween;\n\nexport { gsapWithCSS as gsap, gsapWithCSS as default, CSSPlugin, TweenMaxWithCSS as TweenMax };\nexport { TweenLite, TimelineMax, TimelineLite, Power0, Power1, Power2, Power3, Power4, Linear, Quad, Cubic, Quart, Quint, Strong, Elastic, Back, SteppedEase, Bounce, Sine, Expo, Circ, wrap, wrapYoyo, distribute, random, snap, normalize, getUnit, clamp, splitColor, toArray, mapRange, pipe, unitize, interpolate, shuffle } from \"./gsap-core.js\";\nexport * from \"./Draggable.js\";\nexport * from \"./CSSRulePlugin.js\";\nexport * from \"./EaselPlugin.js\";\nexport * from \"./EasePack.js\";\nexport * from \"./MotionPathPlugin.js\";\nexport * from \"./PixiPlugin.js\";\nexport * from \"./ScrollToPlugin.js\";\nexport * from \"./ScrollTrigger.js\";\nexport * from \"./TextPlugin.js\"; \n\n//BONUS EXPORTS\n//export * from \"./CustomEase.js\";\n//export * from \"./DrawSVGPlugin.js\";\n//export * from \"./Physics2DPlugin.js\";\n//export * from \"./PhysicsPropsPlugin.js\";\n//export * from \"./ScrambleTextPlugin.js\";\n//export * from \"./CustomBounce.js\";\n//export * from \"./CustomWiggle.js\";\n//export * from \"./Flip.js\";\n//export * from \"./GSDevTools.js\";\n//export * from \"./InertiaPlugin.js\";\n//export * from \"./MorphSVGPlugin.js\";\n//export * from \"./MotionPathHelper.js\";\n//export * from \"./SplitText.js\";","import { component } from 'picoapp';\nimport { gsap } from 'gsap/all';\n\nclass Search {\n  constructor(el, ctx) {\n    this.isActive = false;\n    this.ctx = ctx;\n    this.identifier = el.dataset.identifier;\n    this.isActive = false;\n    this.init(el);\n    this.initAnimations();\n    this.bindEvents();\n  }\n\n  init(el) {\n    this.wrapper = el;\n    this.searchForm = el.querySelector('form');\n  }\n\n  initAnimations() {\n    let tl = gsap.timeline({\n      paused: true,\n      onComplete: () => {\n        this.isActive = true;\n        this.searchForm.querySelector('input')?.focus();\n      },\n      onReverseComplete: () => {\n        this.isActive = false;\n        gsap.set(this.el, { clearProps: 'all' });\n      },\n    });\n    tl.set(this.wrapper, {display: 'block', immediateRender: false});\n    tl.from(this.wrapper, { height:0, opacity: 0, stagger: 0.05, duration: 0.2, ease: 'power2.out' });\n    tl.from(this.searchForm, { opacity: 0 });\n    this.tl = tl;\n  }\n\n  bindEvents() {\n    this.ctx.on('toggle', (state) => {\n      if ( state.identifier == this.identifier) {\n        if (this.isActive) {\n          this.tl.reverse();\n        } else {\n          this.tl.play();\n        }\n      }\n    });\n\n    // Close modal with ESC key\n    document.addEventListener('keyup', (e) => {\n      if (e.key == 'Escape') {\n        this.tl.reverse();\n      }\n    });\n  }\n}\n\n// module.exports = Drawer;\nexport default component((node, ctx) => {\n  new Search(node, ctx);\n});"],"sourceRoot":""}