{"version":3,"sources":["webpack:///./node_modules/enquire.js/src/Util.js","webpack:///./node_modules/enquire.js/src/index.js","webpack:///./node_modules/enquire.js/src/MediaQueryDispatch.js","webpack:///./node_modules/enquire.js/src/MediaQuery.js","webpack:///./node_modules/enquire.js/src/QueryHandler.js","webpack:///./node_modules/@shopify/theme-product-form/listeners.js","webpack:///./node_modules/@shopify/theme-product/theme-product.js","webpack:///./node_modules/@shopify/theme-product-form/theme-product-form.js","webpack:///./node_modules/@shopify/theme-currency/currency.js","webpack:///./src/js/components/product/ProductForm.js"],"names":["module","exports","isFunction","target","isArray","Object","prototype","toString","apply","each","collection","fn","i","length","MediaQueryDispatch","MediaQuery","Util","window","matchMedia","Error","this","queries","browserIsIncapable","matches","constructor","register","q","options","shouldDegrade","isUnconditional","match","handler","addHandler","unregister","query","removeHandler","clear","QueryHandler","handlers","mql","self","listener","currentTarget","assess","addListener","constuctor","qh","push","on","h","equals","destroy","splice","removeListener","action","deferSetup","setup","initialised","off","unmatch","Listeners","entries","getVariantFromSerializedArray","product","_validateProductStructure","optionArray","Array","TypeError","hasOwnProperty","name","_validateSerializedArray","forEach","option","toLowerCase","value","_createOptionArrayFromOptionCollection","_validateOptionsArray","variants","filter","variant","every","index","getVariantFromOptionArray","keys","add","element","event","addEventListener","removeAll","removeEventListener","selectors","ProductForm","_validateProductObject","_listeners","_onSubmit","bind","optionInputs","_initInputs","onOptionChange","quantityInputs","onQuantityChange","propertyInputs","onPropertyChange","inputs","transform","item","exec","reduce","input","checked","type","properties","propertyName","quantity","Number","parseInt","_setIdInputValue","idInputElement","querySelector","document","createElement","appendChild","dataset","_getProductFormEventData","id","onFormSubmit","_onFormEvent","cb","Function","selector","slice","call","querySelectorAll","map","formatMoney","cents","format","replace","placeholderRegex","formatString","formatWithDelimiters","number","precision","thousands","decimal","isNaN","parts","toFixed","split","require","ProductFormComponent","el","ctx","init","bindEvents","productWrapper","getClosest","formElement","idInput","priceRangeEl","priceEl","addToCartEls","comparePriceEl","variantStockAlertEls","variantSelectors","BISTrigger","gallery","productHandle","fetch","then","response","json","productJSON","productForm","e","addProductToCart","selectedVariant","updateAtcButtons","updateTextElements","classList","available","remove","url","test","concat","getUrlWithVariant","location","href","history","replaceState","path","updateFeaturedImage","val","btn","contains","innerHTML","price","theme","strings","disabled","variantUpdated","CustomEvent","detail","dispatchEvent","innerText","compare_at_price","style","display","inventory_quantity","ev","preventDefault","addingToCart","body","formData","serialize","axios","post","data","emit","catch","error","console","log","component","node"],"mappings":"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","file":"20.chunk.15ff1a83ce8e54860f5e.js","sourcesContent":["/**\n * Helper function for iterating over a collection\n *\n * @param collection\n * @param fn\n */\nfunction each(collection, fn) {\n    var i      = 0,\n        length = collection.length,\n        cont;\n\n    for(i; i < length; i++) {\n        cont = fn(collection[i], i);\n        if(cont === false) {\n            break; //allow early exit\n        }\n    }\n}\n\n/**\n * Helper function for determining whether target object is an array\n *\n * @param target the object under test\n * @return {Boolean} true if array, false otherwise\n */\nfunction isArray(target) {\n    return Object.prototype.toString.apply(target) === '[object Array]';\n}\n\n/**\n * Helper function for determining whether target object is a function\n *\n * @param target the object under test\n * @return {Boolean} true if function, false otherwise\n */\nfunction isFunction(target) {\n    return typeof target === 'function';\n}\n\nmodule.exports = {\n    isFunction : isFunction,\n    isArray : isArray,\n    each : each\n};\n","var MediaQueryDispatch = require('./MediaQueryDispatch');\nmodule.exports = new MediaQueryDispatch();\n","var MediaQuery = require('./MediaQuery');\nvar Util = require('./Util');\nvar each = Util.each;\nvar isFunction = Util.isFunction;\nvar isArray = Util.isArray;\n\n/**\n * Allows for registration of query handlers.\n * Manages the query handler's state and is responsible for wiring up browser events\n *\n * @constructor\n */\nfunction MediaQueryDispatch () {\n    if(!window.matchMedia) {\n        throw new Error('matchMedia not present, legacy browsers require a polyfill');\n    }\n\n    this.queries = {};\n    this.browserIsIncapable = !window.matchMedia('only all').matches;\n}\n\nMediaQueryDispatch.prototype = {\n\n    constructor : MediaQueryDispatch,\n\n    /**\n     * Registers a handler for the given media query\n     *\n     * @param {string} q the media query\n     * @param {object || Array || Function} options either a single query handler object, a function, or an array of query handlers\n     * @param {function} options.match fired when query matched\n     * @param {function} [options.unmatch] fired when a query is no longer matched\n     * @param {function} [options.setup] fired when handler first triggered\n     * @param {boolean} [options.deferSetup=false] whether setup should be run immediately or deferred until query is first matched\n     * @param {boolean} [shouldDegrade=false] whether this particular media query should always run on incapable browsers\n     */\n    register : function(q, options, shouldDegrade) {\n        var queries         = this.queries,\n            isUnconditional = shouldDegrade && this.browserIsIncapable;\n\n        if(!queries[q]) {\n            queries[q] = new MediaQuery(q, isUnconditional);\n        }\n\n        //normalise to object in an array\n        if(isFunction(options)) {\n            options = { match : options };\n        }\n        if(!isArray(options)) {\n            options = [options];\n        }\n        each(options, function(handler) {\n            if (isFunction(handler)) {\n                handler = { match : handler };\n            }\n            queries[q].addHandler(handler);\n        });\n\n        return this;\n    },\n\n    /**\n     * unregisters a query and all it's handlers, or a specific handler for a query\n     *\n     * @param {string} q the media query to target\n     * @param {object || function} [handler] specific handler to unregister\n     */\n    unregister : function(q, handler) {\n        var query = this.queries[q];\n\n        if(query) {\n            if(handler) {\n                query.removeHandler(handler);\n            }\n            else {\n                query.clear();\n                delete this.queries[q];\n            }\n        }\n\n        return this;\n    }\n};\n\nmodule.exports = MediaQueryDispatch;\n","var QueryHandler = require('./QueryHandler');\nvar each = require('./Util').each;\n\n/**\n * Represents a single media query, manages it's state and registered handlers for this query\n *\n * @constructor\n * @param {string} query the media query string\n * @param {boolean} [isUnconditional=false] whether the media query should run regardless of whether the conditions are met. Primarily for helping older browsers deal with mobile-first design\n */\nfunction MediaQuery(query, isUnconditional) {\n    this.query = query;\n    this.isUnconditional = isUnconditional;\n    this.handlers = [];\n    this.mql = window.matchMedia(query);\n\n    var self = this;\n    this.listener = function(mql) {\n        // Chrome passes an MediaQueryListEvent object, while other browsers pass MediaQueryList directly\n        self.mql = mql.currentTarget || mql;\n        self.assess();\n    };\n    this.mql.addListener(this.listener);\n}\n\nMediaQuery.prototype = {\n\n    constuctor : MediaQuery,\n\n    /**\n     * add a handler for this query, triggering if already active\n     *\n     * @param {object} handler\n     * @param {function} handler.match callback for when query is activated\n     * @param {function} [handler.unmatch] callback for when query is deactivated\n     * @param {function} [handler.setup] callback for immediate execution when a query handler is registered\n     * @param {boolean} [handler.deferSetup=false] should the setup callback be deferred until the first time the handler is matched?\n     */\n    addHandler : function(handler) {\n        var qh = new QueryHandler(handler);\n        this.handlers.push(qh);\n\n        this.matches() && qh.on();\n    },\n\n    /**\n     * removes the given handler from the collection, and calls it's destroy methods\n     *\n     * @param {object || function} handler the handler to remove\n     */\n    removeHandler : function(handler) {\n        var handlers = this.handlers;\n        each(handlers, function(h, i) {\n            if(h.equals(handler)) {\n                h.destroy();\n                return !handlers.splice(i,1); //remove from array and exit each early\n            }\n        });\n    },\n\n    /**\n     * Determine whether the media query should be considered a match\n     *\n     * @return {Boolean} true if media query can be considered a match, false otherwise\n     */\n    matches : function() {\n        return this.mql.matches || this.isUnconditional;\n    },\n\n    /**\n     * Clears all handlers and unbinds events\n     */\n    clear : function() {\n        each(this.handlers, function(handler) {\n            handler.destroy();\n        });\n        this.mql.removeListener(this.listener);\n        this.handlers.length = 0; //clear array\n    },\n\n    /*\n        * Assesses the query, turning on all handlers if it matches, turning them off if it doesn't match\n        */\n    assess : function() {\n        var action = this.matches() ? 'on' : 'off';\n\n        each(this.handlers, function(handler) {\n            handler[action]();\n        });\n    }\n};\n\nmodule.exports = MediaQuery;\n","/**\n * Delegate to handle a media query being matched and unmatched.\n *\n * @param {object} options\n * @param {function} options.match callback for when the media query is matched\n * @param {function} [options.unmatch] callback for when the media query is unmatched\n * @param {function} [options.setup] one-time callback triggered the first time a query is matched\n * @param {boolean} [options.deferSetup=false] should the setup callback be run immediately, rather than first time query is matched?\n * @constructor\n */\nfunction QueryHandler(options) {\n    this.options = options;\n    !options.deferSetup && this.setup();\n}\n\nQueryHandler.prototype = {\n\n    constructor : QueryHandler,\n\n    /**\n     * coordinates setup of the handler\n     *\n     * @function\n     */\n    setup : function() {\n        if(this.options.setup) {\n            this.options.setup();\n        }\n        this.initialised = true;\n    },\n\n    /**\n     * coordinates setup and triggering of the handler\n     *\n     * @function\n     */\n    on : function() {\n        !this.initialised && this.setup();\n        this.options.match && this.options.match();\n    },\n\n    /**\n     * coordinates the unmatch event for the handler\n     *\n     * @function\n     */\n    off : function() {\n        this.options.unmatch && this.options.unmatch();\n    },\n\n    /**\n     * called when a handler is to be destroyed.\n     * delegates to the destroy or unmatch callbacks, depending on availability.\n     *\n     * @function\n     */\n    destroy : function() {\n        this.options.destroy ? this.options.destroy() : this.off();\n    },\n\n    /**\n     * determines equality by reference.\n     * if object is supplied compare options, if function, compare match callback\n     *\n     * @function\n     * @param {object || function} [target] the target for comparison\n     */\n    equals : function(target) {\n        return this.options === target || this.options.match === target;\n    }\n\n};\n\nmodule.exports = QueryHandler;\n","export default function Listeners() {\n  this.entries = [];\n}\n\nListeners.prototype.add = function(element, event, fn) {\n  this.entries.push({ element: element, event: event, fn: fn });\n  element.addEventListener(event, fn);\n};\n\nListeners.prototype.removeAll = function() {\n  this.entries = this.entries.filter(function(listener) {\n    listener.element.removeEventListener(listener.event, listener.fn);\n    return false;\n  });\n};\n","/**\n * Returns a product JSON object when passed a product URL\n * @param {*} url\n */\nexport function getProductJson(handle) {\n  return fetch('/products/' + handle + '.js').then(function(response) {\n    return response.json();\n  });\n}\n\n/**\n * Find a match in the project JSON (using a ID number) and return the variant (as an Object)\n * @param {Object} product Product JSON object\n * @param {Number} value Accepts Number (e.g. 6908023078973)\n * @returns {Object} The variant object once a match has been successful. Otherwise null will be return\n */\nexport function getVariantFromId(product, value) {\n  _validateProductStructure(product);\n\n  if (typeof value !== 'number') {\n    throw new TypeError(value + ' is not a Number.');\n  }\n\n  var result = product.variants.filter(function(variant) {\n    return variant.id === value;\n  });\n\n  return result[0] || null;\n}\n\n/**\n * Convert the Object (with 'name' and 'value' keys) into an Array of values, then find a match & return the variant (as an Object)\n * @param {Object} product Product JSON object\n * @param {Object} collection Object with 'name' and 'value' keys (e.g. [{ name: \"Size\", value: \"36\" }, { name: \"Color\", value: \"Black\" }])\n * @returns {Object || null} The variant object once a match has been successful. Otherwise null will be returned\n */\nexport function getVariantFromSerializedArray(product, collection) {\n  _validateProductStructure(product);\n\n  // If value is an array of options\n  var optionArray = _createOptionArrayFromOptionCollection(product, collection);\n  return getVariantFromOptionArray(product, optionArray);\n}\n\n/**\n * Find a match in the project JSON (using Array with option values) and return the variant (as an Object)\n * @param {Object} product Product JSON object\n * @param {Array} options List of submitted values (e.g. ['36', 'Black'])\n * @returns {Object || null} The variant object once a match has been successful. Otherwise null will be returned\n */\nexport function getVariantFromOptionArray(product, options) {\n  _validateProductStructure(product);\n  _validateOptionsArray(options);\n\n  var result = product.variants.filter(function(variant) {\n    return options.every(function(option, index) {\n      return variant.options[index] === option;\n    });\n  });\n\n  return result[0] || null;\n}\n\n/**\n * Creates an array of selected options from the object\n * Loops through the project.options and check if the \"option name\" exist (product.options.name) and matches the target\n * @param {Object} product Product JSON object\n * @param {Array} collection Array of object (e.g. [{ name: \"Size\", value: \"36\" }, { name: \"Color\", value: \"Black\" }])\n * @returns {Array} The result of the matched values. (e.g. ['36', 'Black'])\n */\nfunction _createOptionArrayFromOptionCollection(product, collection) {\n  _validateProductStructure(product);\n  _validateSerializedArray(collection);\n\n  var optionArray = [];\n\n  collection.forEach(function(option) {\n    for (var i = 0; i < product.options.length; i++) {\n      if (product.options[i].name.toLowerCase() === option.name.toLowerCase()) {\n        optionArray[i] = option.value;\n        break;\n      }\n    }\n  });\n\n  return optionArray;\n}\n\n/**\n * Check if the product data is a valid JS object\n * Error will be thrown if type is invalid\n * @param {object} product Product JSON object\n */\nfunction _validateProductStructure(product) {\n  if (typeof product !== 'object') {\n    throw new TypeError(product + ' is not an object.');\n  }\n\n  if (Object.keys(product).length === 0 && product.constructor === Object) {\n    throw new Error(product + ' is empty.');\n  }\n}\n\n/**\n * Validate the structure of the array\n * It must be formatted like jQuery's serializeArray()\n * @param {Array} collection Array of object [{ name: \"Size\", value: \"36\" }, { name: \"Color\", value: \"Black\" }]\n */\nfunction _validateSerializedArray(collection) {\n  if (!Array.isArray(collection)) {\n    throw new TypeError(collection + ' is not an array.');\n  }\n\n  if (collection.length === 0) {\n    return [];\n  }\n\n  if (collection[0].hasOwnProperty('name')) {\n    if (typeof collection[0].name !== 'string') {\n      throw new TypeError(\n        'Invalid value type passed for name of option ' +\n          collection[0].name +\n          '. Value should be string.'\n      );\n    }\n  } else {\n    throw new Error(collection[0] + 'does not contain name key.');\n  }\n}\n\n/**\n * Validate the structure of the array\n * It must be formatted as list of values\n * @param {Array} collection Array of object (e.g. ['36', 'Black'])\n */\nfunction _validateOptionsArray(options) {\n  if (Array.isArray(options) && typeof options[0] === 'object') {\n    throw new Error(options + 'is not a valid array of options.');\n  }\n}\n","import Listeners from './listeners';\nimport { getVariantFromSerializedArray } from '@shopify/theme-product';\n\nvar selectors = {\n  idInput: '[name=\"id\"]',\n  optionInput: '[name^=\"options\"]',\n  quantityInput: '[name=\"quantity\"]',\n  propertyInput: '[name^=\"properties\"]'\n};\n\n// Public Methods\n// -----------------------------------------------------------------------------\n\n/**\n * Returns a URL with a variant ID query parameter. Useful for updating window.history\n * with a new URL based on the currently select product variant.\n * @param {string} url - The URL you wish to append the variant ID to\n * @param {number} id  - The variant ID you wish to append to the URL\n * @returns {string} - The new url which includes the variant ID query parameter\n */\n\nexport function getUrlWithVariant(url, id) {\n  if (/variant=/.test(url)) {\n    return url.replace(/(variant=)[^&]+/, '$1' + id);\n  } else if (/\\?/.test(url)) {\n    return url.concat('&variant=').concat(id);\n  }\n\n  return url.concat('?variant=').concat(id);\n}\n\n/**\n * Constructor class that creates a new instance of a product form controller.\n *\n * @param {Element} element - DOM element which is equal to the <form> node wrapping product form inputs\n * @param {Object} product - A product object\n * @param {Object} options - Optional options object\n * @param {Function} options.onOptionChange - Callback for whenever an option input changes\n * @param {Function} options.onQuantityChange - Callback for whenever an quantity input changes\n * @param {Function} options.onPropertyChange - Callback for whenever a property input changes\n * @param {Function} options.onFormSubmit - Callback for whenever the product form is submitted\n */\nexport function ProductForm(element, product, options) {\n  this.element = element;\n  this.product = _validateProductObject(product);\n\n  options = options || {};\n\n  this._listeners = new Listeners();\n  this._listeners.add(\n    this.element,\n    'submit',\n    this._onSubmit.bind(this, options)\n  );\n\n  this.optionInputs = this._initInputs(\n    selectors.optionInput,\n    options.onOptionChange\n  );\n\n  this.quantityInputs = this._initInputs(\n    selectors.quantityInput,\n    options.onQuantityChange\n  );\n\n  this.propertyInputs = this._initInputs(\n    selectors.propertyInput,\n    options.onPropertyChange\n  );\n}\n\n/**\n * Cleans up all event handlers that were assigned when the Product Form was constructed.\n * Useful for use when a section needs to be reloaded in the theme editor.\n */\nProductForm.prototype.destroy = function() {\n  this._listeners.removeAll();\n};\n\n/**\n * Getter method which returns the array of currently selected option values\n *\n * @returns {Array} An array of option values\n */\nProductForm.prototype.options = function() {\n  return _serializeOptionValues(this.optionInputs, function(item) {\n    var regex = /(?:^(options\\[))(.*?)(?:\\])/;\n    item.name = regex.exec(item.name)[2]; // Use just the value between 'options[' and ']'\n    return item;\n  });\n};\n\n/**\n * Getter method which returns the currently selected variant, or `null` if variant\n * doesn't exist.\n *\n * @returns {Object|null} Variant object\n */\nProductForm.prototype.variant = function() {\n  return getVariantFromSerializedArray(this.product, this.options());\n};\n\n/**\n * Getter method which returns a collection of objects containing name and values\n * of property inputs\n *\n * @returns {Array} Collection of objects with name and value keys\n */\nProductForm.prototype.properties = function() {\n  var properties = _serializePropertyValues(this.propertyInputs, function(\n    propertyName\n  ) {\n    var regex = /(?:^(properties\\[))(.*?)(?:\\])/;\n    var name = regex.exec(propertyName)[2]; // Use just the value between 'properties[' and ']'\n    return name;\n  });\n\n  return Object.entries(properties).length === 0 ? null : properties;\n};\n\n/**\n * Getter method which returns the current quantity or 1 if no quantity input is\n * included in the form\n *\n * @returns {Array} Collection of objects with name and value keys\n */\nProductForm.prototype.quantity = function() {\n  return this.quantityInputs[0]\n    ? Number.parseInt(this.quantityInputs[0].value, 10)\n    : 1;\n};\n\n// Private Methods\n// -----------------------------------------------------------------------------\nProductForm.prototype._setIdInputValue = function(value) {\n  var idInputElement = this.element.querySelector(selectors.idInput);\n\n  if (!idInputElement) {\n    idInputElement = document.createElement('input');\n    idInputElement.type = 'hidden';\n    idInputElement.name = 'id';\n    this.element.appendChild(idInputElement);\n  }\n\n  idInputElement.value = value.toString();\n};\n\nProductForm.prototype._onSubmit = function(options, event) {\n  event.dataset = this._getProductFormEventData();\n\n  if (event.dataset.variant) {\n    this._setIdInputValue(event.dataset.variant.id);\n  }\n\n  if (options.onFormSubmit) {\n    options.onFormSubmit(event);\n  }\n};\n\nProductForm.prototype._onFormEvent = function(cb) {\n  if (typeof cb === 'undefined') {\n    return Function.prototype;\n  }\n\n  return function(event) {\n    event.dataset = this._getProductFormEventData();\n    cb(event);\n  }.bind(this);\n};\n\nProductForm.prototype._initInputs = function(selector, cb) {\n  var elements = Array.prototype.slice.call(\n    this.element.querySelectorAll(selector)\n  );\n\n  return elements.map(\n    function(element) {\n      this._listeners.add(element, 'change', this._onFormEvent(cb));\n      return element;\n    }.bind(this)\n  );\n};\n\nProductForm.prototype._getProductFormEventData = function() {\n  return {\n    options: this.options(),\n    variant: this.variant(),\n    properties: this.properties(),\n    quantity: this.quantity()\n  };\n};\n\nfunction _serializeOptionValues(inputs, transform) {\n  return inputs.reduce(function(options, input) {\n    if (\n      input.checked || // If input is a checked (means type radio or checkbox)\n      (input.type !== 'radio' && input.type !== 'checkbox') // Or if its any other type of input\n    ) {\n      options.push(transform({ name: input.name, value: input.value }));\n    }\n\n    return options;\n  }, []);\n}\n\nfunction _serializePropertyValues(inputs, transform) {\n  return inputs.reduce(function(properties, input) {\n    if (\n      input.checked || // If input is a checked (means type radio or checkbox)\n      (input.type !== 'radio' && input.type !== 'checkbox') // Or if its any other type of input\n    ) {\n      properties[transform(input.name)] = input.value;\n    }\n\n    return properties;\n  }, {});\n}\n\nfunction _validateProductObject(product) {\n  if (typeof product !== 'object') {\n    throw new TypeError(product + ' is not an object.');\n  }\n\n  if (typeof product.variants[0].options === 'undefined') {\n    throw new TypeError(\n      'Product object is invalid. Make sure you use the product object that is output from {{ product | json }} or from the http://[your-product-url].js route'\n    );\n  }\n\n  return product;\n}\n","/**\n * Currency Helpers\n * -----------------------------------------------------------------------------\n * A collection of useful functions that help with currency formatting\n *\n * Current contents\n * - formatMoney - Takes an amount in cents and returns it as a formatted dollar value.\n *\n */\n\nconst moneyFormat = '${{amount}}';\n\n/**\n * Format money values based on your shop currency settings\n * @param  {Number|string} cents - value in cents or dollar amount e.g. 300 cents\n * or 3.00 dollars\n * @param  {String} format - shop money_format setting\n * @return {String} value - formatted value\n */\nexport function formatMoney(cents, format) {\n  if (typeof cents === 'string') {\n    cents = cents.replace('.', '');\n  }\n  let value = '';\n  const placeholderRegex = /\\{\\{\\s*(\\w+)\\s*\\}\\}/;\n  const formatString = format || moneyFormat;\n\n  function formatWithDelimiters(\n    number,\n    precision = 2,\n    thousands = ',',\n    decimal = '.'\n  ) {\n    if (isNaN(number) || number == null) {\n      return 0;\n    }\n\n    number = (number / 100.0).toFixed(precision);\n\n    const parts = number.split('.');\n    const dollarsAmount = parts[0].replace(\n      /(\\d)(?=(\\d\\d\\d)+(?!\\d))/g,\n      `$1${thousands}`\n    );\n    const centsAmount = parts[1] ? decimal + parts[1] : '';\n\n    return dollarsAmount + centsAmount;\n  }\n\n  switch (formatString.match(placeholderRegex)[1]) {\n    case 'amount':\n      value = formatWithDelimiters(cents, 2);\n      break;\n    case 'amount_no_decimals':\n      value = formatWithDelimiters(cents, 0);\n      break;\n    case 'amount_with_comma_separator':\n      value = formatWithDelimiters(cents, 2, '.', ',');\n      break;\n    case 'amount_no_decimals_with_comma_separator':\n      value = formatWithDelimiters(cents, 0, '.', ',');\n      break;\n  }\n\n  return formatString.replace(placeholderRegex, value);\n}\n","import { component } from 'picoapp';\nimport { ProductForm, getUrlWithVariant } from '@shopify/theme-product-form';\nimport { formatMoney } from '@shopify/theme-currency';\nimport { serialize, getClosest } from '../../utilities';\nimport axios from 'axios';\nconst enquire = require('enquire.js');\n\nconst selectors = {\n  idInput: '[name=\"id\"]',\n  priceRange: '[data-price-range]',\n  comparePrice: '[data-compare-price]',\n  productPrice: '[data-product-price]',\n  productSku: '[data-product-sku]',\n  addToCart: '[data-add-to-cart]',\n  variantStockAlert: '[data-stock-alert]',\n  variantSelectors: '[name*=options]',\n  BISTrigger: '#BIS_trigger',\n};\n\nclass ProductFormComponent {\n  constructor(el, ctx) {\n    this.el = el;\n    this.ctx = ctx;\n    this.init();\n    this.bindEvents();\n    this.onOptionChange = this.onOptionChange.bind(this);\n  }\n\n  init() {\n    // Cache DOM nodes\n    this.productWrapper = getClosest(this.el, '.Product');\n    this.formElement = this.el;\n    this.idInput = document.querySelector(selectors.idInput);\n    this.priceRangeEl = this.el.querySelector(selectors.priceRange);\n    this.priceEl = this.el.querySelector(selectors.productPrice);\n    this.addToCartEls = this.productWrapper.querySelectorAll(selectors.addToCart);\n    this.comparePriceEl = this.el.querySelector(selectors.comparePrice);\n    this.variantStockAlertEls = document.querySelectorAll(selectors.variantStockAlert);\n    this.variantSelectors = this.el.querySelectorAll(selectors.variantSelectors);\n    this.BISTrigger = document.querySelector(selectors.BISTrigger);\n    this.gallery = document.querySelector('.ProductGallery');\n\n    // Fetch variants info\n    const productHandle = this.formElement.dataset.productHandle;\n    fetch(`/products/${productHandle}.js`)\n      .then((response) => {\n        return response.json();\n      })\n      .then((productJSON) => {\n        this.productForm = new ProductForm(this.formElement, productJSON, {\n          onOptionChange: this.onOptionChange,\n        });\n      });\n  }\n\n  bindEvents() {\n    this.formElement.addEventListener('submit', (e) => {\n      this.addProductToCart(e);\n    });\n\n    /*  enquire.register('screen and (min-width: 1024px)', {\n       setup: () => {\n         const vw = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);\n         if (vw <= 1024) {\n           document.querySelector('#anchor-for-bis-mobile').appendChild(this.BISTrigger);\n         }\n       },\n       match: () => {\n         // go for desktop view\n         document.querySelector('#anchor-for-bis-desktop').appendChild(this.BISTrigger);\n       },\n       unmatch: () => {\n         // go for mobile view\n         document.querySelector('#anchor-for-bis-mobile').appendChild(this.BISTrigger);\n       },\n     }); */\n  }\n\n  onOptionChange(event) {\n    const variant = event.dataset.variant;\n    let selectedVariant = this.productForm.variant();\n    if (variant === null) {\n      this.updateAtcButtons(null);\n      this.updateTextElements();\n      this.BISTrigger.classList.add('u-hidden');\n    } else if (variant && !variant.available) {\n      this.updateAtcButtons('soldOut', variant);\n      if (this.priceRangeEl) {\n        this.priceRangeEl.classList.add('u-hidden');\n      }\n      this.updateTextElements(selectedVariant);\n      this.BISTrigger.classList.remove('u-hidden');\n\n    } else if (variant && variant.available) {\n      if (this.priceRangeEl) {\n        this.priceRangeEl.classList.add('u-hidden');\n      }\n      this.updateAtcButtons('addToCart', variant);\n      this.BISTrigger.classList.add('u-hidden');\n\n      this.updateTextElements(selectedVariant);\n    }\n\n    if (variant !== null) {\n      const url = getUrlWithVariant(window.location.href, variant.id);\n      window.history.replaceState({ path: url }, '', url);\n      this.idInput.value = variant.id;\n      this.updateFeaturedImage(selectedVariant);\n    }\n  }\n\n  updateAtcButtons(val, variant) {\n    this.addToCartEls.forEach((btn) => {\n      if (val && variant) {\n        if (btn.classList.contains('Button--mobile')) {\n          if (variant.available) {\n            btn.innerHTML = 'Buy - ' + formatMoney(variant.price);\n          } else {\n            btn.innerHTML = theme.strings[val];\n          }\n        } else {\n          btn.innerHTML = theme.strings[val];\n        }\n      } else {\n        btn.innerHTML = 'Choose Options';\n      }\n      switch (val) {\n        case 'soldOut':\n          btn.disabled = true;\n          break;\n        case 'addToCart':\n          btn.disabled = false;\n          break;\n\n        default:\n          btn.disabled = true;\n          break;\n      }\n    });\n  }\n\n  updateFeaturedImage(variant) {\n    if (variant && this.gallery) {\n      const variantUpdated = new CustomEvent('variant-updated', {\n        detail: {\n          variant: variant,\n        },\n      });\n      this.gallery.dispatchEvent(variantUpdated);\n    }\n  }\n  updateTextElements(variant) {\n    if (variant) {\n      this.priceEl.classList.remove('u-hidden');\n      this.priceEl.innerText = formatMoney(variant.price);\n    }\n\n    if (variant && this.comparePriceEl) {\n      this.comparePriceEl.classList.remove('u-hidden');\n    }\n\n    if (variant && this.comparePriceEl) {\n      if (variant.price < variant.compare_at_price) {\n        this.comparePriceEl.style.display = 'inline-block';\n        this.comparePriceEl.innerHTML = formatMoney(variant.compare_at_price);\n      } else {\n        this.comparePriceEl.style.display = 'none';\n      }\n    }\n\n    this.variantStockAlertEls.forEach((el) => {\n      if (variant.inventory_quantity <= 20 && variant.inventory_quantity > 0) {\n        el.innerHTML = '<em>Hurry, only ' + variant.inventory_quantity + ' left in stock!</em>';\n        el.classList.remove('u-hidden');\n      } else {\n        el.classList.add('u-hidden');\n      }\n    });\n  }\n\n  addProductToCart(ev) {\n    ev.preventDefault();\n    const addingToCart = new CustomEvent('cart.productAdding');\n    document.body.dispatchEvent(addingToCart);\n\n    const formData = serialize(this.el);\n\n    axios\n      .post('/cart/add.js', formData)\n      .then((response) => {\n        const productAddedToCart = new CustomEvent('cart.productAdded', {\n          detail: response.data,\n        });\n        //document.body.dispatchEvent(productAddedToCart);\n        this.ctx.emit('cart.productAdded');\n        // Redirect to checkout depending on element dataset properties\n        //if (this.successAction && this.successAction == 'redirect') {\n        //  window.location.replace(window.location.origin + '/checkout');\n        //}\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n}\n\nexport default component((node, ctx) => {\n  new ProductFormComponent(node, ctx);\n});\n"],"sourceRoot":""}