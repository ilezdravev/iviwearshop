{"version":3,"sources":["webpack:///./src/js/components/ui/Slider.js"],"names":["Flickity","require","Slider","el","this","_init","bindEvents","nextSlide","bind","previousSlide","defaults","autoPlay","contain","customUI","draggable","cellSelector","cellAlign","prevNextButtons","pageDots","groupCells","wrapAround","wheelControl","adaptiveHeight","arrowShape","x0","x1","y1","x2","y2","x3","breakpoint","dataset","options","merge","str2json","parentControllerEl","getClosest","classList","remove","sliderEl","initCustomUI","slider","containerEl","referenceElement","parentNode","previousButton","querySelector","removeEventListener","addEventListener","nextButton","previous","next","window","resize","innerWidth","destroy","jQuery","on","e","wheel","addWheelListener","element","event","preventDefault","wheelNormalized","normalizeWheel","applyForce","pixelY","startAnimation","dragEnd","pointer","cellElement","cellIndex","target","click","component","node","ctx"],"mappings":"mMAEMA,EAAWC,EAAQ,KAKnBC,E,WACJ,WAAYC,GAAI,YACdC,KAAKC,MAAMF,GACXC,KAAKE,aACLF,KAAKG,UAAYH,KAAKG,UAAUC,KAAKJ,MACrCA,KAAKK,cAAgBL,KAAKK,cAAcD,KAAKJ,M,iCAG/C,SAAMD,GACJC,KAAKD,GAAKA,EAEVC,KAAKM,SAAW,CACdC,UAAU,EACVC,SAAS,EACTC,UAAU,EACVC,WAAW,EACXC,aAAc,gBACdC,UAAW,OACXC,iBAAiB,EACjBC,UAAU,EACVC,YAAY,EACZC,YAAY,EACZC,cAAc,EACdC,gBAAgB,EAChBC,WAAY,CACVC,GAAI,GACJC,GAAI,GAAIC,GAAI,GACZC,GAAI,GAAIC,GAAI,GACZC,GAAI,KAGRzB,KAAK0B,WAAa1B,KAAKD,GAAG4B,QAAQD,WAAa1B,KAAKD,GAAG4B,QAAQD,WAAa,MAE5E1B,KAAK4B,QAAUC,gBAAM7B,KAAKM,SAAUwB,YAAS/B,EAAG4B,QAAQC,UAExD5B,KAAK+B,mBAAqBC,YAAWhC,KAAKD,GAAI,wBAC9CA,EAAGkC,UAAUC,OAAO,aAEpBlC,KAAKmC,SAAW,IAAIvC,EAASG,EAAIC,KAAK4B,SAElC5B,KAAK4B,QAAQnB,UACfT,KAAKoC,aAAapC,KAAKmC,Y,0BAI3B,SAAaE,GAAQ,WACbC,EAActC,KAAK4B,QAAQW,iBAAmBP,YAAWhC,KAAKD,GAAIC,KAAK4B,QAAQW,kBAAoBvC,KAAKD,GAAGyC,WAwB7GC,EAAiBH,EAAYI,cAAc,qBAC3CD,IACFA,EAAeE,oBAAoB,SAAS,kBAAM,EAAKtC,cAAcgC,MACrEI,EAAeG,iBAAiB,SAAS,kBAAM,EAAKvC,cAAcgC,OAIpE,IAAIQ,EAAaP,EAAYI,cAAc,iBAEvCG,IAEFA,EAAWF,oBAAoB,SAAS,kBAAM,EAAKxC,UAAUkC,MAC7DQ,EAAWD,iBAAiB,SAAS,kBAAM,EAAKzC,UAAUkC,S,2BAI9D,SAAcA,GACZA,EAAOS,a,uBAGT,SAAUT,GACRA,EAAOU,S,wBAGT,WAAa,WACXC,OAAOJ,iBAAiB,QAAQ,WAC9B,EAAKT,SAASc,SACQ,UAAnB,EAAKvB,YAA0BsB,OAAOE,WAAa,KACpD,EAAKf,SAASgB,aAIdnD,KAAK+B,oBACPqB,OAAOpD,KAAK+B,oBAAoBsB,GAAG,YAAY,SAACC,GAC9C,EAAKnB,SAASc,YAIdjD,KAAK4B,QAAQX,cACfsC,IAAMC,iBAAiBxD,KAAKmC,SAASsB,SAAS,SAACC,GAC7CA,EAAMC,iBACN,IAAMC,EAAkBC,IAAeH,GACvC,EAAKvB,SAAS2B,YAAYF,EAAgBG,OAAS,GACnD,EAAK5B,SAAS6B,iBACd,EAAK7B,SAAS8B,aAIlBjE,KAAKmC,SAASkB,GAAG,eAAe,SAAUK,EAAOQ,EAASC,EAAaC,GAChED,GAGLT,EAAMW,OAAOC,WAGftB,OAAOJ,iBAAiB,UAAU,WACV,UAAnB,EAAKlB,YAA0BsB,OAAOE,WAAa,IACpD,EAAKf,SAASgB,WAEd,EAAKhB,SAAW,IAAIvC,EAAS,EAAKG,GAAI,EAAK6B,SACvC,EAAKA,QAAQnB,UACf,EAAK2B,aAAa,EAAKD,kB,KAOlBoC,uBAAU,SAACC,EAAMC,GAC9B,IAAI3E,EAAO0E,EAAMC","file":"33.chunk.1df32f789e686be332b7.js","sourcesContent":["import { component } from 'picoapp';\nimport { merge } from 'lodash';\nconst Flickity = require('flickity');\nimport wheel from 'wheel';\nimport normalizeWheel from 'normalize-wheel';\nimport { str2json, getClosest } from '../../utilities';\n\nclass Slider {\n  constructor(el) {\n    this._init(el);\n    this.bindEvents();\n    this.nextSlide = this.nextSlide.bind(this);\n    this.previousSlide = this.previousSlide.bind(this);\n  }\n\n  _init(el) {\n    this.el = el;\n\n    this.defaults = {\n      autoPlay: false,\n      contain: true,\n      customUI: false,\n      draggable: true,\n      cellSelector: '.Slider__item',\n      cellAlign: 'left',\n      prevNextButtons: true,\n      pageDots: true,\n      groupCells: false,\n      wrapAround: true,\n      wheelControl: false,\n      adaptiveHeight: true,\n      arrowShape: { \n        x0: 10,\n        x1: 60, y1: 50,\n        x2: 60, y2: 45,\n        x3: 15\n      }\n    };\n    this.breakpoint = this.el.dataset.breakpoint ? this.el.dataset.breakpoint : 'all'\n\n    this.options = merge(this.defaults, str2json(el.dataset.options));\n\n    this.parentControllerEl = getClosest(this.el, '.js-sliderController');\n    el.classList.remove('is-hidden');\n\n    this.sliderEl = new Flickity(el, this.options);\n\n    if (this.options.customUI) {\n      this.initCustomUI(this.sliderEl);\n    }\n  }\n\n  initCustomUI(slider) {\n    const containerEl = this.options.referenceElement ? getClosest(this.el, this.options.referenceElement) : this.el.parentNode;\n    // const cellsButtonGroup = containerEl.querySelector('.button-group--cells');\n\n    // if (cellsButtonGroup) {\n    //   const cellsButtons = [].slice.call(cellsButtonGroup.children);\n    //   // update buttons on select\n    //   slider.on('cellSelect', (index) => {\n    //     var previousSelectedButton = cellsButtonGroup.querySelector(\n    //       '.is-selected'\n    //     );\n    //     var selectedButton = cellsButtonGroup.children[slider.selectedIndex];\n    //     previousSelectedButton.classList.remove('is-selected');\n    //     selectedButton.classList.add('is-selected');\n    //   });\n\n    //   // cell select\n    //   cellsButtons.forEach((el, index) => {\n    //     el.addEventListener('click', (e) => {\n    //       slider.select(index);\n    //     });\n    //   });\n    // }\n\n    // previous\n    var previousButton = containerEl.querySelector('.button--previous');\n    if (previousButton) {\n      previousButton.removeEventListener('click', () => this.previousSlide(slider));\n      previousButton.addEventListener('click', () => this.previousSlide(slider));\n    }\n\n    // next\n    var nextButton = containerEl.querySelector('.button--next');\n    // console.log('CONTAINER: ', containerEl);\n    if (nextButton) {\n      // console.log('NEXT BUTTON: ', nextButton);\n      nextButton.removeEventListener('click', () => this.nextSlide(slider));\n      nextButton.addEventListener('click', () => this.nextSlide(slider));\n    }\n  }\n\n  previousSlide(slider){\n    slider.previous();\n  }\n\n  nextSlide(slider) {\n    slider.next();\n  }\n\n  bindEvents() {\n    window.addEventListener('load', () => {\n      this.sliderEl.resize();\n      if(this.breakpoint == 'mobile' && window.innerWidth > 768){\n        this.sliderEl.destroy();\n      }\n    });\n\n    if (this.parentControllerEl) {\n      jQuery(this.parentControllerEl).on('isActive', (e) => {\n        this.sliderEl.resize();\n      });\n    }\n\n    if (this.options.wheelControl) {\n      wheel.addWheelListener(this.sliderEl.element, (event) => {\n        event.preventDefault();\n        const wheelNormalized = normalizeWheel(event);\n        this.sliderEl.applyForce(-wheelNormalized.pixelY / 4);\n        this.sliderEl.startAnimation();\n        this.sliderEl.dragEnd();\n      });\n    }\n\n    this.sliderEl.on('staticClick', function (event, pointer, cellElement, cellIndex) {\n      if (!cellElement) {\n        return;\n      }\n      event.target.click();\n    });\n\n    window.addEventListener('resize', () => {\n      if(this.breakpoint == 'mobile' && window.innerWidth > 768){\n        this.sliderEl.destroy();\n      } else {\n        this.sliderEl = new Flickity(this.el, this.options);\n        if (this.options.customUI) {\n          this.initCustomUI(this.sliderEl);\n        }\n      }\n    })\n  }\n}\n\nexport default component((node, ctx) => {\n  new Slider(node, ctx);\n});\n"],"sourceRoot":""}