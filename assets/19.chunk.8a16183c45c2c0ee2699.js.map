{"version":3,"sources":["webpack:///./src/js/components/product/ModelsNav.js"],"names":["ModelsNav","appstate","parentNode","useState","models","setModels","current","setCurrent","initialModel","setInitialModel","dropdownActive","setDropdownActive","useEffect","modelsData","window","gwm","querySelector","dataset","model","findIndex","name","on","newModel","modelItem","key","index","className","onClick","handleChange","src","image","dress_size","height","bust","waist","hips","length","viewBox","width","href","find","emit","modelName","map","component","node","ctx","element","ReactDOM","render","unmountComponentAtNode","e","console","error"],"mappings":"4JAIMA,EAAY,SAAC,GAA2B,IAA1BC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,WAAgB,EAEhBC,mBAAS,MAFO,WAErCC,EAFqC,KAE7BC,EAF6B,OAGdF,mBAAS,MAHK,WAGrCG,EAHqC,KAG5BC,EAH4B,OAIJJ,mBAAS,MAJL,WAIrCK,EAJqC,KAIvBC,EAJuB,OAKAN,oBAAS,GALT,WAKrCO,EALqC,KAKrBC,EALqB,KAO5CC,qBAAU,WACR,IAAMC,EAAaC,OAAOC,IAAIX,OAC9BC,EAAUQ,GACVJ,EAAgBP,EAAWA,WAAWc,cAAc,kBAAkBC,QAAQC,SAC9E,IASFN,qBAAU,WACLR,IACDG,EAAWH,EAAOA,EAAOe,WAAU,SAAAD,GAAK,OAAIA,EAAME,MAAQZ,OAR5DP,EAASoB,GAAG,gBAAgB,WAC1B,IAAMC,EAAWpB,EAAWA,WAAWc,cAAc,8BAA8BC,QAAQC,MAC3FX,EAAWH,EAAOA,EAAOe,WAAU,SAAAD,GAAK,OAAIA,EAAME,MAAQE,aAS3D,CAAClB,IAEJ,IAsCuBc,EAtCjBK,EAAY,SAACL,GACjB,OACE,yBAAKM,IAAKN,EAAMO,MAAOC,UAAS,0BAAqBR,EAAMO,OAASnB,EAAQmB,MAAQ,WAAa,IAAME,QAAS,kBAAMC,EAAaV,EAAMO,SACvI,4BAAQC,UAAU,kBAChB,yBAAKG,IAAKX,EAAMY,SAElB,yBAAKJ,UAAU,QACb,yBAAKA,UAAU,SAASR,EAAME,KAA9B,oBAAqDF,EAAMa,YAEzDb,EAAMc,QAAUd,EAAMe,MAAQf,EAAMgB,OAAShB,EAAMiB,KACjD,oCACE,yBAAKT,UAAU,iCAAiCR,EAAMc,OAAtD,QAAmEd,EAAMe,KAAzE,MAAkFf,EAAMgB,MAAxF,MAAkGhB,EAAMiB,MACxG,yBAAKT,UAAU,gCAAgCR,EAAMc,OAArD,YAAsEd,EAAMe,KAA5E,YAA2Ff,EAAMgB,MAAjG,WAAgHhB,EAAMiB,OAEtH,KAELjB,EAAMO,OAASnB,EAAQmB,OAASrB,EAAOgC,OAAS,GAC/C,yBAAKC,QAAQ,YAAYX,UAAU,OAAOY,MAAM,MAAMN,OAAO,OAC3D,yBAAKO,KAAK,iBA8BhBX,EAAe,SAACH,GACpBd,GAAmBD,GAChBe,GAASnB,EAAQmB,OAClBlB,EAAWH,EAAOqB,IAEpB,IAAMH,EAAWlB,EAAOoC,MAAK,SAAAtB,GAAK,OAAIA,EAAMO,OAASA,KACrDxB,EAASwC,KAAK,mBAAmB,CAACC,UAAWpB,EAASF,QAGxD,OAAOd,GAnBgBY,EAmBQZ,EAjB3B,oCACGF,EAAOgC,OAAS,GAbnB,yBAAKV,UAAS,wBAAmBhB,EAAiB,YAAc,KAC7DN,EAAOuC,KAAK,SAAAzB,GACX,GAAGA,IAAUZ,EACX,OAAOiB,EAAUL,OAWpBK,EAAUL,KAeyB,MAI7B0B,uBAAU,SAACC,EAAMC,GAC9B,IAAMC,EAAU,kBAAC/C,EAAD,CAAWC,SAAU6C,EAAK5C,WAAY2C,IAItD,OAHAG,IAASC,OAAOF,EAASF,GAGlB,WACL,IACEG,IAASE,uBAAuBL,GAChC,MAAOM,GACPC,QAAQC,MAAMF","file":"19.chunk.8a16183c45c2c0ee2699.js","sourcesContent":["import ReactDOM from 'react-dom';\nimport React, { Component, useEffect, useState } from 'react';\nimport { component } from 'picoapp'\n\nconst ModelsNav = ({appstate, parentNode}) => {\n\n  const [models, setModels] = useState(null);\n  const [current, setCurrent] = useState(null);\n  const [initialModel, setInitialModel] = useState(null);\n  const [dropdownActive, setDropdownActive] = useState(false);\n  \n  useEffect(() => {\n    const modelsData = window.gwm.models;\n    setModels(modelsData);\n    setInitialModel(parentNode.parentNode.querySelector('.Gallery__item').dataset.model);\n  },[])\n\n  const bindEvents = () => {\n    appstate.on('model_change', () => {\n      const newModel = parentNode.parentNode.querySelector('.Gallery__item.is-selected').dataset.model;\n      setCurrent(models[models.findIndex(model => model.name == newModel)])\n    })\n  }\n\n  useEffect(() => {\n    if(models){\n      setCurrent(models[models.findIndex(model => model.name == initialModel)])\n      bindEvents()\n    }\n  }, [models])\n\n  const modelItem = (model) => {\n    return (\n      <div key={model.index} className={`modelItem Media ${model.index == current.index ? 'selected' : ''}`} onClick={() => handleChange(model.index)}>\n        <figure className=\"Media__content\">\n          <img src={model.image} />\n        </figure>\n        <div className=\"info\">\n          <div className=\"title\">{model.name} is wearing size {model.dress_size}</div>\n          {\n            model.height && model.bust && model.waist && model.hips ? (\n              <>\n                <div className=\"measures u-show--untilDesktop\">{model.height} | B {model.bust} W {model.waist} H {model.hips}</div>\n                <div className=\"measures u-show--fromDesktop\">{model.height} | Bust: {model.bust}, Waist: {model.waist}, Hips: {model.hips}</div>    \n              </>\n            ) : null\n          }\n          {model.index == current.index && models.length > 1 && \n            <svg viewBox='0 0 20 20' className='icon' width='1em' height='1em'>\n              <use href='#icon-up'></use>\n            </svg>\n          }\n        </div>\n      </div>\n    )\n  }\n\n  const renderDropDown = () => {\n    return (\n      <div className={`modelDropDown ${dropdownActive ? 'is-active' : ''}`}>\n        {models.map( model => {\n          if(model !== current){\n            return modelItem(model)\n          } \n        })}\n      </div>\n    )\n  }\n\n  const renderCurrent = (model) => {\n    return(\n      <>\n        {models.length > 1 && renderDropDown()}\n        {modelItem(model)}\n        \n      </>\n    )\n  }\n\n  const handleChange = (index) => {\n    setDropdownActive(!dropdownActive);\n    if(index != current.index){\n      setCurrent(models[index]);\n    }\n    const newModel = models.find(model => model.index == index)\n    appstate.emit('model_nav_change',{modelName: newModel.name});\n  }\n  \n  return current ? renderCurrent(current) : null;    \n  \n}\n\nexport default component((node, ctx) => {\n  const element = <ModelsNav appstate={ctx} parentNode={node} />;\n  ReactDOM.render(element, node);\n\n  // Unmount component on Pjax navigation\n  return function () {\n    try {\n      ReactDOM.unmountComponentAtNode(node);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n});"],"sourceRoot":""}